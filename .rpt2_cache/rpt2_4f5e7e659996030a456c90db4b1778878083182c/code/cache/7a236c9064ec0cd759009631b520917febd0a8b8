{
  "code": "import * as tslib_1 from \"tslib\";\r\nvar BaseUIScene = (function (_super) {\r\n    tslib_1.__extends(BaseUIScene, _super);\r\n    function BaseUIScene() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.className_key = \"BaseUIScene\";\r\n        _this.eventPool = [];\r\n        return _this;\r\n    }\r\n    BaseUIScene.prototype.registerEvent = function (target, type, callback, callbackobj) {\r\n        target.on(type, callbackobj, callback);\r\n        this.eventPool.push({ target: target, type: type, callback: callback, callbackobj: callbackobj });\r\n    };\r\n    BaseUIScene.prototype.clearEvent = function () {\r\n        var eventPool = this.eventPool;\r\n        if (eventPool.length > 0) {\r\n            for (var i = 0; i < this.eventPool.length; i++) {\r\n                var target = eventPool[i].target;\r\n                var type = eventPool[i].type;\r\n                var callback = eventPool[i].callback;\r\n                var callbackobj = eventPool[i].callbackobj;\r\n                if (target) {\r\n                    target.off(type, callbackobj, callback);\r\n                }\r\n            }\r\n        }\r\n        eventPool = [];\r\n    };\r\n    BaseUIScene.prototype.onDisable = function () {\r\n        this.removeEvent();\r\n    };\r\n    BaseUIScene.prototype.removeSelf = function () {\r\n        return _super.prototype.removeSelf.call(this);\r\n    };\r\n    BaseUIScene.prototype.onRemoved = function () {\r\n        _super.prototype.onRemoved.call(this);\r\n        this.clearEvent();\r\n    };\r\n    BaseUIScene.prototype.removeEvent = function () {\r\n        this.clearEvent();\r\n    };\r\n    BaseUIScene.prototype.initView = function () {\r\n    };\r\n    BaseUIScene.prototype.addEvent = function () {\r\n    };\r\n    return BaseUIScene;\r\n}(BaseSceneUISkin));\r\nexport { BaseUIScene };\r\nvar EventObj = (function () {\r\n    function EventObj() {\r\n    }\r\n    return EventObj;\r\n}());\r\nexport { EventObj };\r\n",
  "references": []
}
