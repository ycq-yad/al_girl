{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { Als_GameData } from \"../common/GameData\";\r\nimport { netData, localData } from \"../common/GameDataType\";\r\nimport ConfigManager_Als from \"../games/ConfigManager\";\r\nimport { PlayerDataManager_Als } from \"../common/GameDataManager\";\r\nvar InviteManager_Als = (function () {\r\n    function InviteManager_Als() {\r\n        this.URL = Als_GameData.getInstance().URL_OF_INVITE;\r\n        this.inviterInfo = new netData.Als_Inviter();\r\n        this.newPlayer = [];\r\n    }\r\n    InviteManager_Als.getInstance = function () {\r\n        if (!InviteManager_Als.instance_) {\r\n            InviteManager_Als.instance_ = new InviteManager_Als();\r\n        }\r\n        return InviteManager_Als.instance_;\r\n    };\r\n    InviteManager_Als.prototype.selectInfo = function (callF, obj) {\r\n        var _this = this;\r\n        if (callF === void 0) { callF = null; }\r\n        if (obj === void 0) { obj = null; }\r\n        var gameId = Als_GameData.getInstance().gameId;\r\n        var openId = Als_GameData.getInstance().userInfo.openId;\r\n        var msg = {};\r\n        msg.msg_type = \"16\";\r\n        msg.msg_data = {\r\n            \"gameid\": gameId,\r\n            \"openid\": openId\r\n        };\r\n        console.log(\"查询受邀人列表 ->\", msg);\r\n        HttpMgr.getInstance().sendHttp(this.URL, msg, function (e) {\r\n            var code = e[\"msg_data\"][\"error_code\"];\r\n            if (code == \"0\") {\r\n                console.log(\"查询受邀人列表成功 ->\", e);\r\n                if (e[\"msg_data\"][\"index_list\"] != \"\") {\r\n                    var newPlayerTemp = e[\"msg_data\"][\"index_list\"];\r\n                    if (newPlayerTemp) {\r\n                        _this.newPlayer = newPlayerTemp;\r\n                    }\r\n                    console.log(\"recvnewplayer = \", _this.newPlayer);\r\n                }\r\n            }\r\n            else {\r\n                console.warn(\"查询受邀人列表失败：\", \"str\");\r\n            }\r\n            if (callF && obj) {\r\n                callF.call(obj, code);\r\n            }\r\n        }, function (e) { });\r\n    };\r\n    InviteManager_Als.prototype.createInfo = function (callF, obj) {\r\n        if (callF === void 0) { callF = null; }\r\n        if (obj === void 0) { obj = null; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, new Promise(function (res, rej) {\r\n                            var inviterOpenId = _this.inviterInfo.openId;\r\n                            var tx_url = Als_GameData.getInstance().userInfo.avatarUrl;\r\n                            var nick = Als_GameData.getInstance().userInfo.nick;\r\n                            var gameId = Als_GameData.getInstance().gameId;\r\n                            var msg = {};\r\n                            msg.msg_type = \"14\";\r\n                            msg.msg_data = {\r\n                                \"openid\": inviterOpenId,\r\n                                \"url\": tx_url,\r\n                                \"name\": nick,\r\n                                \"gameid\": gameId\r\n                            };\r\n                            console.log(\"关联自己及邀请人 ->\", msg, \" game id = \", Als_GameData.getInstance().gameId);\r\n                            HttpMgr.getInstance().sendHttp(_this.URL, msg, function (e) {\r\n                                var code = e[\"msg_data\"][\"error_code\"];\r\n                                if (code == \"0\") {\r\n                                    console.log(\"关联自己及邀请人成功...\");\r\n                                }\r\n                                else {\r\n                                    var str = code.toString();\r\n                                    console.warn(\"关联自己及邀请人失败：\", str);\r\n                                }\r\n                                if (callF && obj) {\r\n                                    callF.call(obj, code);\r\n                                }\r\n                                res();\r\n                            }, function (e) { });\r\n                        })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    InviteManager_Als.prototype.judgeInvite = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var res = Als_GameData.getInstance().enterGameInfo;\r\n            console.log(\"开始关联邀请人\", res);\r\n            console.log(\"自己信息\", Als_GameData.getInstance().userInfo);\r\n            if (res) {\r\n                var scene = res.scene;\r\n                if (scene == 1007 || scene == 1008 || scene == 1044) {\r\n                    if (Als_GameData.getInstance().userInfo.openId && res.query && res.query[\"openid\"]) {\r\n                        _this.inviterInfo.nick = res.query[\"nick\"];\r\n                        _this.inviterInfo.openId = res.query[\"openid\"];\r\n                        if (Als_GameData.getInstance().userInfo.openId != _this.inviterInfo.openId) {\r\n                            console.log(\"关联邀请人\", res.query);\r\n                            _this.createInfo();\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            else {\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    InviteManager_Als.prototype.getInviteAwardData = function () {\r\n        var inviteConfig = ConfigManager_Als.getInstance().getInviteConfigInfo();\r\n        var lingqu = PlayerDataManager_Als.getInstance().stPlayerDataBase.inviteId;\r\n        var invitePlayer = this.newPlayer;\r\n        var dataArr = [];\r\n        for (var i = 0, len = inviteConfig.length; i < len; i++) {\r\n            var invite = inviteConfig[i];\r\n            var awardId = invite.ID;\r\n            var canLingqu = false;\r\n            var lingqued = false;\r\n            var player = null;\r\n            if (invitePlayer.length - 1 >= i) {\r\n                player = invitePlayer[i];\r\n            }\r\n            if (lingqu.indexOf(awardId) > -1)\r\n                lingqued = true;\r\n            if (player)\r\n                canLingqu = true;\r\n            var data = new localData.Als_InviteData();\r\n            data.id = awardId;\r\n            data.head = player ? player[\"url\"] : \"\";\r\n            data.reward = invite.nCount;\r\n            data.lingqued = lingqued;\r\n            data.canLingqu = canLingqu;\r\n            dataArr.push(data);\r\n        }\r\n        return dataArr;\r\n    };\r\n    return InviteManager_Als;\r\n}());\r\nexport default InviteManager_Als;\r\n",
  "references": [
    "E:/laya/project/laya_girl_ts_wecat_git/src/script/common/GameData.ts",
    "E:/laya/project/laya_girl_ts_wecat_git/src/script/common/GameDataType.ts",
    "E:/laya/project/laya_girl_ts_wecat_git/src/script/games/ConfigManager.ts",
    "E:/laya/project/laya_girl_ts_wecat_git/src/script/common/GameDataManager.ts"
  ]
}
